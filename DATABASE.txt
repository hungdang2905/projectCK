# Táº O DATABASE
CREATE DATABASE CLOTHERS_SHOP;
USE CLOTHERS_SHOP;
ALTER DATABASE CLOTHERS_SHOP CHARACTER SET utf8 COLLATE utf8_unicode_ci;
CREATE TABLE PRODUCT(
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    CODE VARCHAR(50),
    NAME VARCHAR(255),
    BRAND_ID BIGINT,
    CATEGORY_ID BIGINT,
    PRICE DOUBLE,
    DISCOUNT INT DEFAULT 0,
    DESCRIPTION TEXT,
    THUMBNAIL VARCHAR(255),
    TOTAL_REVIEW INT DEFAULT 0,
    TOTAL_STAR INT DEFAULT 0,
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE BRAND(
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    CODE VARCHAR(50),
    NAME VARCHAR(255),
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE CATEGORY(
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	CODE VARCHAR(50),
    NAME VARCHAR(255),
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE SIZE(
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	CODE VARCHAR(50),
    NAME VARCHAR(255),
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE COLOR(
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	CODE VARCHAR(50),
    NAME VARCHAR(255),
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE PHOTO(
    PRODUCT_ID BIGINT,
    PHOTO_URL VARCHAR(255)
);

CREATE TABLE STATUS (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    CODE VARCHAR(50),
    NAME VARCHAR(255),
    DESCRIPTION VARCHAR(255),
    STATUS_GROUP VARCHAR(50),
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE ACCOUNT (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    RE_LOGIN_TOKEN VARCHAR(255),
    VALIDATE_TOKEN VARCHAR(255),
    LAST_NAME VARCHAR(50),
    FIRST_NAME VARCHAR(50),
    PHONE VARCHAR(20),
    EMAIL VARCHAR(50),
    ADDRESS VARCHAR(255),
    USER_NAME VARCHAR(50),
    PASSWORD VARCHAR(50),
    ROLE_ID BIGINT,
    STATUS_ID BIGINT,
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE ROLE (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    CODE VARCHAR(50),
    NAME VARCHAR(255),
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE ORDERS(
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    ACCOUNT_ID BIGINT,
    RECIPIENT VARCHAR(255),
    ORDERS_PHONE VARCHAR(20),
    ORDERS_ADDRESS VARCHAR(255),
    STATUS_ID BIGINT DEFAULT 4,
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
); 

CREATE TABLE ORDER_DETAIL(
    ORDER_ID BIGINT,
    PRODUCT_ID BIGINT,
    COLOR_ID BIGINT,
    SIZE_ID BIGINT,
    AMOUNT INT DEFAULT 1,
    PRICE DOUBLE,
    DISCOUNT INT
);

CREATE TABLE CART(
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    ACCOUNT_ID BIGINT,
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
); 

CREATE TABLE CART_DETAIL(
    CART_ID BIGINT,
    PRODUCT_ID BIGINT,
    COLOR_ID BIGINT,
    SIZE_ID BIGINT,
    AMOUNT INT DEFAULT 1
);

CREATE TABLE REVIEW (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    ACCOUNT_ID BIGINT,
    PRODUCT_ID BIGINT,
    CONTENT TEXT,
    STAR INT,
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE WAREHOUSE (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    PRODUCT_ID BIGINT,
    SIZE_ID BIGINT,
    COLOR_ID BIGINT,
    AMOUNT INT DEFAULT 0,
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE WAREHOUSE_RECEIPT (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    PRODUCT_ID BIGINT,
    SIZE_ID BIGINT,
    COLOR_ID BIGINT,
    AMOUNT INT DEFAULT 0,
    PRICE DOUBLE DEFAULT 0,
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE SIGN (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    ACCOUNT_ID BIGINT,
    SIGN TEXT,
    KEY_SIZE INT,
    IS_ACTIVE BOOLEAN,
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

CREATE TABLE VERIFICATION (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    ORDER_ID BIGINT,
    HASH_VALUE VARCHAR(255),
    SIGN_ID BIGINT,
    IS_OK BOOLEAN,
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(50),
    MODIFIED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(50)
);

-- THEM KHOA NGOAI --
ALTER TABLE PRODUCT ADD CONSTRAINT PRODUCT_BRAND FOREIGN KEY (BRAND_ID) REFERENCES BRAND(ID);
ALTER TABLE PRODUCT ADD CONSTRAINT PRODUCT_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(ID);

ALTER TABLE WAREHOUSE ADD CONSTRAINT WAREHOUSE_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID);
ALTER TABLE WAREHOUSE ADD CONSTRAINT WAREHOUSE_SIZE FOREIGN KEY (SIZE_ID) REFERENCES SIZE(ID);
ALTER TABLE WAREHOUSE ADD CONSTRAINT WAREHOUSE_COLOR FOREIGN KEY (COLOR_ID) REFERENCES COLOR(ID);

ALTER TABLE WAREHOUSE_RECEIPT ADD CONSTRAINT WAREHOUSE_RECEIPT_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID);
ALTER TABLE WAREHOUSE_RECEIPT ADD CONSTRAINT WAREHOUSE_RECEIPT_SIZE FOREIGN KEY (SIZE_ID) REFERENCES SIZE(ID);
ALTER TABLE WAREHOUSE_RECEIPT ADD CONSTRAINT WAREHOUSE_RECEIPT_COLOR FOREIGN KEY (COLOR_ID) REFERENCES COLOR(ID);

ALTER TABLE PHOTO ADD CONSTRAINT PHOTO_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID);

ALTER TABLE CART ADD CONSTRAINT CART_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID);

ALTER TABLE CART_DETAIL ADD CONSTRAINT CART_DETAIL_CART FOREIGN KEY (CART_ID) REFERENCES CART(ID);
ALTER TABLE CART_DETAIL ADD CONSTRAINT CART_DETAIL_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID);
ALTER TABLE CART_DETAIL ADD CONSTRAINT CART_DETAIL_COLOR FOREIGN KEY (COLOR_ID) REFERENCES COLOR(ID);
ALTER TABLE CART_DETAIL ADD CONSTRAINT CART_DETAIL_SIZE FOREIGN KEY (SIZE_ID) REFERENCES SIZE(ID);

ALTER TABLE ORDERS ADD CONSTRAINT ORDER_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID);
ALTER TABLE ORDERS ADD CONSTRAINT ORDER_STATUS FOREIGN KEY (STATUS_ID) REFERENCES STATUS(ID);

ALTER TABLE ORDER_DETAIL ADD CONSTRAINT ORDER_DETAIL_ORDER FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ID);
ALTER TABLE ORDER_DETAIL ADD CONSTRAINT ORDER_DETAIL_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID);
ALTER TABLE ORDER_DETAIL ADD CONSTRAINT ORDER_DETAIL_COLOR FOREIGN KEY (COLOR_ID) REFERENCES COLOR(ID);
ALTER TABLE ORDER_DETAIL ADD CONSTRAINT ORDER_DETAIL_SIZE FOREIGN KEY (SIZE_ID) REFERENCES SIZE(ID);

ALTER TABLE REVIEW ADD CONSTRAINT REVIEW_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID);
ALTER TABLE REVIEW ADD CONSTRAINT REVIEW_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID);

ALTER TABLE ACCOUNT ADD CONSTRAINT ACCOUNT_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID);
ALTER TABLE ACCOUNT ADD CONSTRAINT ACCOUNT_STATUS FOREIGN KEY (STATUS_ID) REFERENCES STATUS(ID);

ALTER TABLE SIGN ADD CONSTRAINT SIGN_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID);
ALTER TABLE VERIFICATION ADD CONSTRAINT VERIFICATION_ORDER FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ID);
ALTER TABLE VERIFICATION ADD CONSTRAINT VERIFICATION_SIGN FOREIGN KEY (SIGN_ID) REFERENCES SIGN(ID);

-- ============ --
